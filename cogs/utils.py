import discord
from discord.ext import commands

from pyowm import OWM
from pyowm.commons.exceptions import NotFoundError
from urllib.parse import quote

from typing import Union


class Utils(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.owm = OWM(self.bot.config.tokens['OWM'])
        self.owm.config['language'] = 'ru'

        self.weather_mananger = self.owm.weather_manager()

    @commands.command(name='calculate',
                      aliases=['calc'],
                      usage='<–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ>')
    async def calculate(self, ctx: commands.Context, *, expression):
        """–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –æ–¥–Ω–∏ –µ–¥–µ–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤ –¥—Ä—É–≥–∏–µ
        
        **–ü—Ä–∏–º–µ—Ä—ã:**
        `calc sin(2)*cos(5)`
        `calc sqrt(10)/-2`
        `calc 5 kilobytes in bytes`
        `calc 0.58 km in meters`"""
        async with self.bot.session.get(f'https://api.mathjs.org/v4/?expr={quote(expression)}') as resp:
            res = await resp.text()
            res = res.replace('`', '\u200b`\u200b')[:500]

            await ctx.send(embed=discord.Embed(title='–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä') \
                                        .add_field(name='–†–µ–∑—É–ª—å—Ç–∞—Ç:',
                                                   value=res) \
                                        .set_thumbnail(url='https://cdn.discordapp.com/emojis/796686124684279839.png') \
                                        .set_footer(text='Powered by MathJS API: https://api.mathjs.org/'))

    @commands.command(name='weather',
                      usage='<–≥–æ—Ä–æ–¥>')
    async def weather(self, ctx: commands.Context, *, city):
        """–£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ/–ø–æ—Å—ë–ª–∫–µ/—Å—Ç—Ä–∞–Ω–µ."""
        try:
            observation = self.weather_mananger.weather_at_place(city)
            weather = observation.weather
        except NotFoundError:
            return await ctx.send(f'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –≥–æ—Ä–æ–¥. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É–∫–∞–∑–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞–ø–∏—Å–∞–Ω.')
        
        embed = discord.Embed(title=f'–ü–æ–≥–æ–¥–∞ –≤ {observation.location.name}',
                              description=weather.detailed_status.capitalize())
        embed.set_thumbnail(url=weather.weather_icon_url())

        temperature = weather.temperature('celsius')
        wind = weather.wind('km_hour')

        embed.add_field(name='–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞',
                        value=f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Å–µ–π—á–∞—Å: **{temperature["temp"]}¬∞C**\n'
                              f'–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: **{temperature["feels_like"]}¬∞C**\n'
                              f'–°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: **{(temperature["temp_min"]+temperature["temp_max"])/2}¬∞C** '
                              f'(–æ—Ç **{temperature["temp_min"]}¬∞C** –¥–æ **{temperature["temp_max"]}¬∞C**)')

        embed.add_field(name='–í–µ—Ç–µ—Ä',
                        value=f'–°–∫–æ—Ä–æ—Å—Ç—å: **{wind["speed"]} –∫–º/—á**\n'
                              f'–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: **{wind["deg"]}¬∞**')
            
        embed.add_field(name='–í–ª–∞–∂–Ω–æ—Å—Ç—å',
                        value=f'{weather.humidity}%')
        
        embed.add_field(name='–í—Ä–µ–º—è —Ä–∞—Å—Å–≤–µ—Ç–∞',
                        value=weather.sunrise_time('date').strftime('%H:%M'))
        
        embed.add_field(name='–í—Ä–µ–º—è –∑–∞—Ö–æ–¥–∞',
                        value=weather.sunset_time('date').strftime('%H:%M'))

        embed.add_field(name='\u200b', value='\u200b')

        embed.set_footer(text=f'–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ')
        embed.timestamp = weather.reference_time('date')

        await ctx.send(embed=embed)

    @commands.group(name='idea',
                    usage='<—Ç–µ–∫—Å—Ç>',
                    invoke_without_command=True)
    async def idea(self, ctx: commands.Context, *, text):
        """–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏–¥–µ—é.
        
        –î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ—é –∏–¥–µ—é –≤–æ—Å—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å `idea edit <ID> <—Ç–µ–∫—Å—Ç>`
        
        –ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å –∏–ª–∏ –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∏–¥–µ—é, –≤–æ—Å—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å `idea accept/decline <ID> [–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π]`
        –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∏–¥–µ–µ, –ø—Ä–æ—Ü–∏—Ç–∏—Ä–æ–≤–∞–≤ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–¥–µ–µ–π"""

        try:
            channel = await self.bot.db.execute('SELECT * FROM idea_channel WHERE guild_id=$1', [ctx.guild.id])
            if not channel:
                raise ValueError()

            channel = await self.bot.fetch_channel(channel['channel_id'])
            idea_id = await self.bot.db.utils.Counter.add('ideas', 1)

            message = await channel.send(embed=discord.Embed(title=f'–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ #{idea_id}',
                                                             description=text) \
                                                      .set_footer(text=ctx.author.name,
                                                                  icon_url=ctx.author.avatar_url))

            await self.bot.db.execute('INSERT INTO ideas VALUES ($1, $2, $3, $4)',
                                      [ctx.guild.id, idea_id, message.id, ctx.author.id])

            await message.add_reaction('üëç')
            await message.add_reaction('üëé')

            await ctx.react('üëå')
        except (discord.Forbidden, discord.NotFound, ValueError):
            return await ctx.send('–ö–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π –Ω–µ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ, '
                                  '–∏–ª–∏ —É –º–µ–Ω—è –Ω–µ—Ç—É –ø—Ä–∞–≤ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç—É–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è. '
                                  '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é `idea channel <#–∫–∞–Ω–∞–ª>`.')

    @idea.command(name='channel',
                  usage='[–∫–∞–Ω–∞–ª/reset]')
    @commands.has_permissions(manage_guild=True)
    async def idea_channel(self, ctx: commands.Context,
                           channel: Union[discord.TextChannel, str] = None):
        """–ò–∑–º–µ–Ω–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ."""
        if not channel:
            channel = await self.bot.db.execute('SELECT * FROM idea_channel WHERE guild_id=$1', [ctx.guild.id])
            if not channel:
                await ctx.send('–ö–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π **–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω** –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.')
            else:
                await ctx.send(f'–ö–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ: <#{channel["channel_id"]}>')
        
        else:
            if type(channel) != discord.TextChannel and channel != 'reset':
                raise commands.UserInputError()

            if channel == 'reset':
                deleted = await self.bot.db.execute('DELETE FROM idea_channel WHERE guild_id=$1 RETURNING *', [ctx.guild.id])
                if not deleted:
                    await ctx.send('–ö–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π **–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω** –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.')
                else:
                    await ctx.send('–ö–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω. :ok_hand:')

            else:
                if not channel.permissions_for(ctx.guild.me).send_messages:
                    await ctx.send(f'–£ –º–µ–Ω—è –Ω–µ—Ç—É –ø—Ä–∞–≤ –Ω–∞ **–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π** –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≤–∞–º–∏ –∫–∞–Ω–∞–ª–µ.')
                
                else:
                    await self.bot.db.execute('INSERT INTO idea_channel VALUES ($1, $2) '
                                              'ON CONFLICT(guild_id) DO UPDATE '
                                              'SET channel_id = EXCLUDED.channel_id',
                                              [ctx.guild.id, channel.id])
                    await ctx.send(f'–ö–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ {channel.mention}. :ok_hand:')

    @idea.command(name='accept',
                  usage='<ID –∏–¥–µ–∏> [–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π]')
    @commands.has_permissions(manage_messages=True)
    async def accept(self, ctx: commands.Context, id: int, *, comment = None):
        """–ü—Ä–∏–Ω—è—Ç—å –∏–¥–µ—é"""
        channel = await self.bot.db.execute('SELECT * FROM idea_channel WHERE guild_id=$1', [ctx.guild.id])
        if not channel:
            return await ctx.send('–ù–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π. '
                                  '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é `idea channel <#–∫–∞–Ω–∞–ª>`')
        
        idea = await self.bot.db.execute('SELECT * FROM ideas WHERE idea_id=$1', [id])
        if not idea:
            return await ctx.send('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–¥–µ—è. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ ID –∏–¥–µ–∏.')
        
        channel = await self.bot.fetch_channel(channel['channel_id'])
        message = await channel.fetch_message(idea['message_id'])
        embed = message.embeds[0]
        embed.title = f'–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ #{id} (–ø—Ä–∏–Ω—è—Ç–æ)'
        embed.color = discord.Colour.green().value
        embed.clear_fields()
        if comment:
            embed.add_field(name=f'–û—Ç–≤–µ—Ç –æ—Ç {ctx.author}:',
                            value=comment)

        await message.edit(embed=embed)
        await ctx.react('üëå')

    @idea.command(name='edit',
                  usage='<ID –∏–¥–µ–∏> <—Ç–µ–∫—Å—Ç>')
    async def edit(self, ctx: commands.Context, id: int, *, text):
        """–û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–¥–µ—é"""
        channel = await self.bot.db.execute('SELECT * FROM idea_channel WHERE guild_id=$1', [ctx.guild.id])
        if not channel:
            return await ctx.send('–ù–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π. '
                                  '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é `idea channel <#–∫–∞–Ω–∞–ª>`')
        
        idea = await self.bot.db.execute('SELECT * FROM ideas WHERE idea_id=$1', [id])
        if not idea:
            return await ctx.send('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–¥–µ—è. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ ID –∏–¥–µ–∏.')
        
        if idea['author_id'] != ctx.author.id:
            return await ctx.send('–¢–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä –∏–¥–µ–∏ –º–æ–∂–µ—Ç –µ—ë –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å')

        channel = await self.bot.fetch_channel(channel['channel_id'])
        message = await channel.fetch_message(idea['message_id'])

        embed = message.embeds[0]
        embed.description = text + ' (–æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ—Ä–æ–º)'

        await message.edit(embed=embed)
        await ctx.react('üëå')

    @idea.command(name='decline',
                  usage='<ID –∏–¥–µ–∏> [–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π]')
    @commands.has_permissions(manage_messages=True)
    async def decline(self, ctx: commands.Context, id: int, *, comment = None):
        """–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∏–¥–µ—é"""
        channel = await self.bot.db.execute('SELECT * FROM idea_channel WHERE guild_id=$1', [ctx.guild.id])
        if not channel:
            return await ctx.send('–ù–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π. '
                                  '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞–Ω–∞–ª –¥–ª—è –∏–¥–µ–π –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é `idea channel <#–∫–∞–Ω–∞–ª>`')
        
        idea = await self.bot.db.execute('SELECT * FROM ideas WHERE idea_id=$1', [id])
        if not idea:
            return await ctx.send('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–¥–µ—è. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–ª–∏ ID –∏–¥–µ–∏.')
        
        channel = await self.bot.fetch_channel(channel['channel_id'])
        message = await channel.fetch_message(idea['message_id'])
        embed = message.embeds[0]
        embed.title = f'–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ #{id} (–æ—Ç–∫–∞–∑–∞–Ω–æ)'
        embed.color = discord.Colour.red().value
        embed.clear_fields()
        if comment:
            embed.add_field(name=f'–û—Ç–≤–µ—Ç –æ—Ç {ctx.author}:',
                            value=comment)

        await message.edit(embed=embed)
        await ctx.react('üëå')
    
    @commands.Cog.listener()
    async def on_message(self, message: discord.Message):
        if message.reference and message.guild and message.channel.permissions_for(message.author).manage_messages:
            message_id = message.reference.message_id
            if not await self.bot.db.execute('SELECT * FROM ideas WHERE message_id=$1', [message_id]):
                return
            
            msg = await message.channel.fetch_message(message_id)
            embed = msg.embeds[0]
            embed.clear_fields()
            embed.add_field(name=f'–û—Ç–≤–µ—Ç –æ—Ç {message.author}:',
                            value=message.content)
            await msg.edit(embed=embed)


def setup(bot: commands.Bot):
    bot.add_cog(Utils(bot))